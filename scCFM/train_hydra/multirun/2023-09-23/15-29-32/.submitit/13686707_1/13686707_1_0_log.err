WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1695475801.135919 2230112 tfrt_cpu_pjrt_client.cc:349] TfrtCpuClient created.
No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
/home/icb/alessandro.palma/miniconda3/envs/scCFM/lib/python3.10/site-packages/scvi/_settings.py:63: UserWarning: Since v1.0.0, scvi-tools no longer uses a random seed by default. Run `scvi.settings.seed = 0` to reproduce results from previous versions.
  self.seed = seed
/home/icb/alessandro.palma/miniconda3/envs/scCFM/lib/python3.10/site-packages/scvi/_settings.py:70: UserWarning: Setting `dl_pin_memory_gpu_training` is deprecated in v1.0 and will be removed in v1.1. Please pass in `pin_memory` to the data loaders instead.
  self.dl_pin_memory_gpu_training = (
wandb: Currently logged in as: allepalma. Use `wandb login --relogin` to force relogin
wandb: wandb version 0.15.11 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.15.10
wandb: Run data is saved locally in /home/icb/alessandro.palma/environment/scCFM/project_dir/experiments/1_OFFICIAL_cfm_eb_latent_geodesic_LEAVEOUT/wandb/run-20230923_153006-fpj4yftb
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run neat-elevator-6
wandb: ⭐️ View project at https://wandb.ai/allepalma/1_OFFICIAL_cfm_eb_latent_geodesic_leaveout
wandb: 🚀 View run at https://wandb.ai/allepalma/1_OFFICIAL_cfm_eb_latent_geodesic_leaveout/runs/fpj4yftb
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
/home/icb/alessandro.palma/miniconda3/envs/scCFM/lib/python3.10/site-packages/pytorch_lightning/callbacks/model_checkpoint.py:617: UserWarning: Checkpoint directory /lustre/groups/ml01/workspace/alessandro.palma/scCFM/experiments/1_OFFICIAL_cfm_eb_latent_geodesic_LEAVEOUT/checkpoints exists and is not empty.
  rank_zero_warn(f"Checkpoint directory {dirpath} exists and is not empty.")
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name      | Type      | Params
----------------------------------------
0 | net       | MLP       | 9.9 K 
1 | node      | NeuralODE | 9.9 K 
2 | criterion | MSELoss   | 0     
----------------------------------------
9.9 K     Trainable params
0         Non-trainable params
9.9 K     Total params
0.039     Total estimated model params size (MB)
SLURM auto-requeueing enabled. Setting signal handlers.
/home/icb/alessandro.palma/miniconda3/envs/scCFM/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:442: PossibleUserWarning: The dataloader, val_dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 112 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
/home/icb/alessandro.palma/miniconda3/envs/scCFM/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:442: PossibleUserWarning: The dataloader, train_dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 112 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
/home/icb/alessandro.palma/miniconda3/envs/scCFM/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:281: PossibleUserWarning: The number of training batches (13) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.
  rank_zero_warn(
wandb: Waiting for W&B process to finish... (success).
wandb: 
wandb: Run history:
wandb:                epoch ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███
wandb:           train/loss █▅▅▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▃▂▂▂▂▁▂▁▁▂▂▁▁▂▁▁▂▂▁▁▁▁
wandb:  trainer/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▃▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇▇███
wandb:             val/loss █▅▄▄▃▃▃▃▂▃▂▃▂▂▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▁▁▁▁▁▁▁▂▁▁▁
wandb: val/t1/1-Wasserstein █▆▅▄▃▄▃▄▃▄▃▃▃▂▂▂▁▂▄▂▂▂▂▁▂▂▁▂▂▃▂▁▂▂▁▁▁▁▂▁
wandb: val/t1/2-Wasserstein █▆▅▄▃▄▃▄▃▃▃▃▄▂▃▃▁▂▄▂▂▂▂▁▂▂▂▂▂▃▂▁▂▂▁▁▁▁▂▂
wandb:    val/t1/Linear_MMD ▃▂▃▂▂▅▂▅▃▄▂▂▇▄▃▃▃▃█▄▄▂▄▁▃▄▅▄▃▆▂▂▃▄▂▂▃▂▆▅
wandb:       val/t1/Mean_L1 ▆▃▅▂▁▅▃▅▃▅▄▃▅▃▃▂▂▃▆▅▄▃▄▁▄▃▄▅▂▇▂▃▁▆▃▂▅▃█▅
wandb:       val/t1/Mean_L2 ▇▃▅▃▁▆▃▆▃▅▄▃▆▅▅▂▂▃▇▅▅▃▄▁▄▃▅▅▂▇▂▃▁▆▃▂▅▃█▆
wandb:      val/t1/Mean_MSE ▇▃▅▂▁▅▂▆▃▄▃▂▆▄▄▂▂▂▆▅▄▂▃▁▃▂▄▄▂▇▂▂▁▅▂▂▄▃█▅
wandb:     val/t1/Median_L1 █▇▄▃▃▂▂▁▄▆▂▁▃▃▃▄▃▂▂▂▅▄▅▃▂▄▂▃▃▂▄▅▃▃▃▃▃▄▄▄
wandb:     val/t1/Median_L2 █▇▅▃▄▃▂▂▃▄▂▁▂▂▃▃▂▁▁▂▃▂▂▂▁▂▂▂▂▁▂▂▁▂▂▁▂▃▃▂
wandb:    val/t1/Median_MSE █▆▅▃▄▃▂▂▃▄▂▁▁▂▃▃▂▁▁▂▃▂▂▂▁▂▂▂▂▁▂▂▁▂▂▁▂▃▃▂
wandb:      val/t1/Poly_MMD ▄▃▄▃▂▆▃▆▄▅▃▃▇▅▄▄▃▄█▅▅▃▅▁▄▅▆▅▄▇▃▃▄▅▃▃▄▃▇▆
wandb:       val/t1/RBF_MMD ▄▃▄▃▂▅▃▆▄▅▃▃▇▄▃▄▄▄█▅▅▃▅▁▅▄▅▅▄▇▄▃▄▅▄▃▄▂▇▅
wandb: val/t2/1-Wasserstein █▇▄▃▃▃▃▁▄▆▂▁▃▃▄▅▃▃▂▃▆▄▅▃▂▄▂▃▄▂▅▅▃▃▃▃▃▄▅▄
wandb: val/t2/2-Wasserstein ██▃▄▃▃▃▂▄▆▃▁▃▄▃▄▄▂▃▂▄▄▅▃▂▄▂▃▄▂▅▄▃▄▄▄▄▄▅▄
wandb:    val/t2/Linear_MMD █▆▄▃▃▃▂▂▃▇▂▂▂▄▃▄▃▃▃▂▆▄▅▃▁▄▂▃▃▂▄▄▂▃▃▂▃▄▄▃
wandb:       val/t2/Mean_L1 ▃▆▄▃▆▇▃▅▆▂▂▅▃▅▆▄▄█▇▂▄▇▄▂▁▆▄▄█▅▂▄▄▂▁▄▆▄▇▃
wandb:       val/t2/Mean_L2 ▇▄▄▅██▆▅▆▁▄▆▄▃▆▃▃▆▆▂▅▅▃▃▂▇▃▄▅▄▅▃▃▂▂▅▄▄▃▅
wandb:      val/t2/Mean_MSE ▆▄▅▅▇█▆▅▇▁▄▇▃▄▆▃▃▇▆▃▅▅▃▃▂▇▃▄▅▃▄▃▃▁▁▅▄▄▄▅
wandb:     val/t2/Median_L1 ▂▄▃▃▅▆▃▄▄▃▃█▃▄▆▄▄▆▆▂▄▇▄▂▁▆▄▄▅▅▁▃▄▃▂▂▆▄▆▄
wandb:     val/t2/Median_L2 ▄▅▄▃▅▆▃▄▅▂▁▅▃▄▅▄▃█▅▂▄▆▄▂▁▄▅▃▄▄▂▄▃▂▁▄▆▃▄▂
wandb:    val/t2/Median_MSE ▃▆▅▄▆▇▃▅▆▃▂▅▃▅▆▄▄█▇▂▄▇▄▂▁▆▄▄█▅▂▅▅▂▁▄▇▄▇▃
wandb:      val/t2/Poly_MMD █▆▄▃▃▃▂▂▃▇▂▂▃▄▄▅▄▃▃▃▆▄▆▃▁▅▃▃▄▂▅▄▃▃▄▂▄▄▄▄
wandb:       val/t2/RBF_MMD █▆▃▄▂▃▃▃▃▇▃▂▃▄▄▃▄▄▃▂▄▄▅▃▁▅▁▃▄▂▄▄▃▃▃▃▄▃▄▃
wandb: val/t3/1-Wasserstein ▃▄▃▄▅▆▃▄▄▃▃█▃▅▆▅▄▆▆▂▄█▅▃▁▆▄▅▅▅▂▄▅▄▂▂▆▅▆▅
wandb: val/t3/2-Wasserstein ▅▆▅▄▆▇▄▅▅▄▃█▄▅▆▅▄█▅▄▆█▅▃▁▆▅▄▄▆▃▅▅▅▂▃▇▅▆▅
wandb:    val/t3/Linear_MMD █▄▅▄▄▃▅▃▃▃▃▄▃▃▃▂▂▂▄▂▃▂▃▂▂▂▁▂▂▁▁▁▁▁▂▂▁▁▁▁
wandb:       val/t3/Mean_L1 ▄▁█▃▅▁▄▂▃▂▄▅▁▄▂▂▂▂▆▂▂▂▂▂▂▁▂▂▂▂▁▁▁▂▂▂▂▁▂▁
wandb:       val/t3/Mean_L2 ▄▁█▅▆▂▆▂▃▄▄▇▄▄▄▂▄▄▇▃▄▃▇▄▃▂▃▃▅▂▁▁▃▁▃▄▂▂▃▁
wandb:      val/t3/Mean_MSE ▄▂█▆▆▃█▂▄▅▅▇▄▅▄▃▄▄█▄▅▃█▄▄▂▄▄▆▂▁▂▃▂▃▄▃▂▄▂
wandb:     val/t3/Median_L1 █▅▅▄▄▄▃▃▃▃▂▃▂▂▃▂▁▂▃▂▃▂▂▁▁▂▁▂▂▁▂▁▁▁▁▁▁▂▂▁
wandb:     val/t3/Median_L2 ▄▂█▄▆▂▄▃▃▄▄▆▂▄▃▂▃▃▇▂▃▃▃▃▂▁▃▃▃▃▂▁▁▃▂▃▂▂▃▁
wandb:    val/t3/Median_MSE ▅▂█▄▆▂▅▃▄▃▄▆▂▄▃▂▃▂▇▃▃▃▃▃▂▂▃▃▃▃▂▁▁▂▂▂▂▂▃▁
wandb:      val/t3/Poly_MMD █▄▄▃▄▃▅▂▃▃▃▄▂▃▃▂▂▂▄▂▃▂▃▂▂▂▁▂▂▁▁▁▁▁▂▂▁▁▁▁
wandb:       val/t3/RBF_MMD ▃▁█▅▅▂▇▂▃▄▄▇▃▄▃▂▃▃█▃▄▃▇▃▃▂▃▃▅▂▁▂▃▁▃▃▂▁▃▁
wandb: val/t4/1-Wasserstein █▅▅▃▄▄▃▃▃▃▂▃▂▂▃▂▁▂▃▂▃▂▂▁▁▂▁▂▂▁▁▁▁▁▁▁▁▁▂▂
wandb: val/t4/2-Wasserstein ██▆▃▄▅▃▂▅▆▂▃▄▅▅▄▃▅▇▂▇▅▇▂▁▅▃▄▆▄▃▄▃▂▁▂▄▄▇▄
wandb:    val/t4/Linear_MMD ▆▄▆▃▄▄▄▂▄▆▂▃▅▅▅▄▃▅█▃▆▄▇▁▂▄▄▄▆▄▂▃▃▂▂▂▃▂▇▄
wandb:       val/t4/Mean_L2 █▅▇▄▄▅▄▄▄▇▃▆▄▅▅▃▄▅▇▃▅▅▅▂▁▄▃▄▃▅▂▃▂▄▃▂▅▃▇▄
wandb:      val/t4/Mean_MSE █▄▇▃▅▅▃▄▄▆▃▆▃▆▅▄▃▄▇▃▆▅▅▂▁▄▄▅▄▅▂▃▁▄▂▁▅▃▇▄
wandb:      val/t4/Poly_MMD ▇▅▆▃▄▄▄▃▄▅▂▄▄▄▄▃▄▅█▂▅▄▆▁▂▃▃▃▄▄▂▃▃▃▂▃▄▂▆▃
wandb:       val/t4/RBF_MMD █▅▆▃▅▅▃▃▄▇▃▅▃▅▅▄▃▄▆▃▆▅▆▃▁▅▃▄▄▄▃▄▂▄▃▂▅▄▆▄
wandb: 
wandb: Run summary:
wandb:                epoch 1290
wandb:           train/loss 0.05438
wandb:  trainer/global_step 16782
wandb:             val/loss 0.05585
wandb: val/t1/1-Wasserstein 0.80845
wandb: val/t1/2-Wasserstein 0.83384
wandb:    val/t1/Linear_MMD 0.00262
wandb:       val/t1/Mean_L1 0.04254
wandb:       val/t1/Mean_L2 0.05415
wandb:      val/t1/Mean_MSE 0.00293
wandb:     val/t1/Median_L1 0.01552
wandb:     val/t1/Median_L2 1.06817
wandb:    val/t1/Median_MSE 1.02741
wandb:      val/t1/Poly_MMD 0.05116
wandb:       val/t1/RBF_MMD 0.0385
wandb: val/t2/1-Wasserstein 0.12456
wandb: val/t2/2-Wasserstein 0.0861
wandb:    val/t2/Linear_MMD 0.02118
wandb:       val/t2/Mean_L1 0.01771
wandb:       val/t2/Mean_L2 1.0307
wandb:      val/t2/Mean_MSE 0.98748
wandb:     val/t2/Median_L1 0.02063
wandb:     val/t2/Median_L2 0.1033
wandb:    val/t2/Median_MSE 0.13306
wandb:      val/t2/Poly_MMD 0.14552
wandb:       val/t2/RBF_MMD 0.10716
wandb: val/t3/1-Wasserstein 0.14363
wandb: val/t3/2-Wasserstein 0.11203
wandb:    val/t3/Linear_MMD 0.81324
wandb:       val/t3/Mean_L1 0.00207
wandb:       val/t3/Mean_L2 0.02754
wandb:      val/t3/Mean_MSE 0.03188
wandb:     val/t3/Median_L1 0.90914
wandb:     val/t3/Median_L2 0.0368
wandb:    val/t3/Median_MSE 0.04547
wandb:      val/t3/Poly_MMD 0.83449
wandb:       val/t3/RBF_MMD 0.00102
wandb: val/t4/1-Wasserstein 0.9418
wandb: val/t4/2-Wasserstein 0.00921
wandb:    val/t4/Linear_MMD 0.08517
wandb:       val/t4/Mean_L2 0.07463
wandb:      val/t4/Mean_MSE 0.09719
wandb:      val/t4/Poly_MMD 0.06386
wandb:       val/t4/RBF_MMD 0.0117
wandb: 
wandb: 🚀 View run neat-elevator-6 at: https://wandb.ai/allepalma/1_OFFICIAL_cfm_eb_latent_geodesic_leaveout/runs/fpj4yftb
wandb: Synced 6 W&B file(s), 0 media file(s), 1 artifact file(s) and 0 other file(s)
wandb: Find logs at: /home/icb/alessandro.palma/environment/scCFM/project_dir/experiments/1_OFFICIAL_cfm_eb_latent_geodesic_LEAVEOUT/wandb/run-20230923_153006-fpj4yftb/logs
