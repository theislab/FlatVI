hydra:
  run:
    dir: ./project_dr/runs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    submitit_folder: ${hydra.sweep.dir}/.submitit/%j
    timeout_min: 1440
    cpus_per_task: 6
    gpus_per_node: null
    tasks_per_node: 1
    mem_gb: 90
    nodes: 1
    name: ${hydra.job.name}
    stderr_to_stdout: false
    _target_: hydra_plugins.hydra_submitit_launcher.submitit_launcher.SlurmLauncher
    partition: gpu_p
    qos: gpu_normal
    comment: null
    constraint: null
    exclude: null
    gres: gpu:1
    cpus_per_gpu: null
    gpus_per_task: null
    mem_per_gpu: null
    mem_per_cpu: null
    account: null
    signal_delay_s: 120
    max_num_timeout: 0
    additional_parameters: {}
    array_parallelism: 3
    setup: null
  sweeper:
    _target_: hydra._internal.core_plugins.basic_sweeper.BasicSweeper
    max_batch_size: null
    params:
      model.leaveout_timepoint: 1, 2, 3, 4, 5, 6
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: MULTIRUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=MULTIRUN
    task:
    - hydra=CFM_hein_geodesic_leaveout
    - datamodule=CFM_hein_geodesic_leaveout
    - logger=CFM_hein_geodesic_leaveout
    - train=CFM_hein_geodesic_leaveout
  job:
    name: train_cfm
    chdir: null
    override_dirname: datamodule=CFM_hein_geodesic_leaveout,hydra=CFM_hein_geodesic_leaveout,logger=CFM_hein_geodesic_leaveout,train=CFM_hein_geodesic_leaveout
    id: ???
    num: ???
    config_name: train
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.3'
    cwd: /home/icb/alessandro.palma/environment/scCFM/scCFM/train_hydra
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/icb/alessandro.palma/environment/scCFM/config_hydra
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: ???
    choices:
      hparams_search: null
      launcher: slurm_cluster
      trainer: default
      train: CFM_hein_geodesic_leaveout
      net: default
      model: default
      logger: CFM_hein_geodesic_leaveout
      early_stopping: default
      checkpoint: default
      datamodule: CFM_hein_geodesic_leaveout
      hydra: CFM_hein_geodesic_leaveout
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: basic
      hydra/launcher: submitit_slurm
      hydra/output: default
  verbose: false
datamodule:
  path: /home/icb/alessandro.palma/environment/scCFM/project_dir/data/hein_et_al/flat/hein_geodesic_lib.h5ad
  x_layer: X_latents
  time_key: experimental_time
  use_pca: false
  n_dimensions: null
  train_val_test_split:
  - 0.8
  - 0.2
  batch_size: 256
  num_workers: 2
  model_library_size: true
checkpoint:
  filename: epoch_{epoch:04d}
  monitor: val/loss
  mode: min
  save_last: false
  auto_insert_metric_name: false
early_stopping:
  perform_early_stopping: false
  monitor: train/loss
  patience: 200
  mode: min
  min_delta: 0.0
  verbose: false
  strict: true
  check_finite: true
  stopping_threshold: null
  divergence_threshold: null
  check_on_train_epoch_end: null
logger:
  offline: false
  id: null
  project: 2_OFFICIAL_cfm_hein_latent_geodesic_leaveout
  log_model: true
  prefix: ''
  group: ''
  tags: []
  job_type: ''
model:
  ot_sampler: exact
  sigma: 0.1
  use_real_time: false
  lr: 0.001
  antithetic_time_sampling: false
  leaveout_timepoint: -1
net:
  w: 64
  time_varying: true
train:
  task_name: 2_OFFICIAL_cfm_hein_latent_geodesic_LEAVEOUT
  seed: 42
trainer:
  max_epochs: null
  max_steps: 20000
  accelerator: gpu
  devices: 1
  log_every_n_steps: 50
