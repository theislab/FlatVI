WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
I0000 00:00:1695476144.182988 3761748 tfrt_cpu_pjrt_client.cc:349] TfrtCpuClient created.
No GPU/TPU found, falling back to CPU. (Set TF_CPP_MIN_LOG_LEVEL=0 and rerun for more info.)
/home/icb/alessandro.palma/miniconda3/envs/scCFM/lib/python3.10/site-packages/scvi/_settings.py:63: UserWarning: Since v1.0.0, scvi-tools no longer uses a random seed by default. Run `scvi.settings.seed = 0` to reproduce results from previous versions.
  self.seed = seed
/home/icb/alessandro.palma/miniconda3/envs/scCFM/lib/python3.10/site-packages/scvi/_settings.py:70: UserWarning: Setting `dl_pin_memory_gpu_training` is deprecated in v1.0 and will be removed in v1.1. Please pass in `pin_memory` to the data loaders instead.
  self.dl_pin_memory_gpu_training = (
wandb: Currently logged in as: allepalma. Use `wandb login --relogin` to force relogin
wandb: wandb version 0.15.11 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.15.10
wandb: Run data is saved locally in /home/icb/alessandro.palma/environment/scCFM/project_dir/experiments/2_OFFICIAL_cfm_hein_latent_geodesic_LEAVEOUT/wandb/run-20230923_153554-p38ttxpq
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run glorious-surf-1
wandb: ⭐️ View project at https://wandb.ai/allepalma/2_OFFICIAL_cfm_hein_latent_geodesic_leaveout
wandb: 🚀 View run at https://wandb.ai/allepalma/2_OFFICIAL_cfm_hein_latent_geodesic_leaveout/runs/p38ttxpq
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
You are using a CUDA device ('NVIDIA A100 80GB PCIe') that has Tensor Cores. To properly utilize them, you should set `torch.set_float32_matmul_precision('medium' | 'high')` which will trade-off precision for performance. For more details, read https://pytorch.org/docs/stable/generated/torch.set_float32_matmul_precision.html#torch.set_float32_matmul_precision
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name      | Type      | Params
----------------------------------------
0 | net       | MLP       | 9.9 K 
1 | node      | NeuralODE | 9.9 K 
2 | criterion | MSELoss   | 0     
----------------------------------------
9.9 K     Trainable params
0         Non-trainable params
9.9 K     Total params
0.039     Total estimated model params size (MB)
SLURM auto-requeueing enabled. Setting signal handlers.
/home/icb/alessandro.palma/miniconda3/envs/scCFM/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:442: PossibleUserWarning: The dataloader, val_dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 128 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
/home/icb/alessandro.palma/miniconda3/envs/scCFM/lib/python3.10/site-packages/pytorch_lightning/trainer/connectors/data_connector.py:442: PossibleUserWarning: The dataloader, train_dataloader, does not have many workers which may be a bottleneck. Consider increasing the value of the `num_workers` argument` (try 128 which is the number of cpus on this machine) in the `DataLoader` init to improve performance.
  rank_zero_warn(
/home/icb/alessandro.palma/miniconda3/envs/scCFM/lib/python3.10/site-packages/pytorch_lightning/loops/fit_loop.py:281: PossibleUserWarning: The number of training batches (9) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.
  rank_zero_warn(
wandb: Waiting for W&B process to finish... (success).
wandb: 
wandb: Run history:
wandb:                epoch ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████
wandb:           train/loss █▅▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▁▂▂▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:  trainer/global_step ▁▁▁▁▂▂▂▂▂▃▃▃▃▃▄▄▄▄▄▄▅▅▅▅▅▅▆▆▆▆▆▇▇▇▇▇████
wandb:             val/loss █▆▅▄▃▃▂▃▃▂▂▂▂▂▃▂▂▂▂▂▂▂▂▂▂▁▁▁▁▁▂▁▂▁▁▁▁▁▁▁
wandb: val/t1/1-Wasserstein █▆▇▆▅▅▃▃▃▃▃▃▃▂▂▂▂▁▂▃▂▂▁▂▂▁▁▂▂▁▁▁▁▂▁▁▁▁▁▁
wandb: val/t1/2-Wasserstein █▆▇▆▅▅▃▃▃▃▃▃▃▂▃▂▂▁▂▃▂▂▁▂▂▁▁▂▂▁▁▁▁▂▁▁▁▁▁▁
wandb:    val/t1/Linear_MMD █▂▃▂▂▂▁▂▂▁▁▃▂▁▂▁▃▂▂▂▁▂▂▃▂▁▂▂▂▂▂▁▂▂▂▁▃▁▂▂
wandb:       val/t1/Mean_L1 █▃▆▃▂▅▁▂▃▁▂▄▃▁▂▂▅▂▃▂▁▁▂▄▁▂▄▂▄▂▂▂▅▂▁▂▃▂▁▁
wandb:       val/t1/Mean_L2 █▄▆▃▂▄▁▃▃▂▂▄▃▂▂▂▅▃▃▃▂▂▂▅▂▂▃▂▄▂▃▂▄▂▃▂▃▂▁▂
wandb:      val/t1/Mean_MSE █▃▅▃▂▃▁▂▂▁▂▃▃▁▂▁▄▂▂▂▁▂▂▅▁▁▂▂▃▂▂▁▃▂▂▂▃▂▁▂
wandb:     val/t1/Median_L1 █▃▂▁▂▁▂▁▂▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▂▂▁▁▁▁▁▁▁▁▁▁▁▁▁▁
wandb:     val/t1/Median_L2 █▅▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▁▂▂▂▂▁▂▁▂▂▂▁▁▂▁▁▁▁▁
wandb:    val/t1/Median_MSE █▅▄▄▄▃▃▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▂▁▂▁▁▂▂▁▁▂▁▁▁▁▁
wandb:      val/t1/Poly_MMD █▂▄▃▃▃▁▂▃▂▂▄▃▁▃▂▄▂▄▃▂▃▂▄▃▂▃▃▃▂▃▂▃▂▃▂▄▂▂▃
wandb:       val/t1/RBF_MMD █▃▄▄▃▄▂▂▃▂▂▄▃▁▃▂▄▂▄▃▂▃▃▄▃▂▃▄▄▃▂▂▃▃▃▂▄▂▃▃
wandb: val/t2/1-Wasserstein █▄▄▂▃▂▂▂▂▂▂▂▁▂▂▂▂▂▂▂▁▂▂▂▂▃▂▂▂▂▂▁▂▂▂▂▂▁▂▂
wandb: val/t2/2-Wasserstein █▄▄▂▃▂▂▂▂▂▂▂▁▂▂▂▁▂▂▂▁▂▂▂▃▂▁▂▂▂▂▁▂▂▁▂▂▁▂▂
wandb:    val/t2/Linear_MMD █▃▃▂▃▁▂▁▂▂▁▂▁▁▂▁▂▁▂▁▂▂▂▁▂▁▁▁▁▁▁▁▁▁▁▂▁▁▁▁
wandb:       val/t2/Mean_L1 █▅▂▂▂▂▁▂▂▁▂▂▁▁▂▂▁▂▁▁▁▁▁▂▂▂▂▁▂▂▂▂▂▁▄▁▂▂▁▂
wandb:       val/t2/Mean_L2 █▅▆▇▆▄▅▄▅▄▃▄▄▄▄▄▂▃▃▂▂▂▄▃▄▃▂▃▃▃▃▂▂▁▅▂▃▃▂▁
wandb:      val/t2/Mean_MSE █▆▆▇▆▅▅▄▅▄▃▄▄▄▄▄▂▃▃▂▂▃▃▃▄▃▂▃▃▃▃▂▂▁▅▂▃▂▂▁
wandb:     val/t2/Median_L1 █▅▃▃▃▃▂▃▃▂▃▂▂▂▂▂▂▃▁▂▁▂▂▃▃▂▂▂▂▂▂▂▂▁▄▁▂▂▁▂
wandb:     val/t2/Median_L2 █▆▃▃▃▄▂▃▄▂▂▃▂▁▂▂▁▂▂▂▂▁▂▃▃▂▂▂▂▃▃▃▃▁▅▂▃▃▁▃
wandb:    val/t2/Median_MSE █▆▃▃▃▄▂▃▄▂▂▃▂▁▃▂▁▂▂▂▁▂▂▃▃▂▂▂▃▃▂▃▃▁▅▂▃▃▁▂
wandb:      val/t2/Poly_MMD █▄▄▂▄▂▃▂▃▂▂▂▂▂▃▂▂▂▃▂▂▂▂▁▃▂▂▂▂▂▂▂▂▂▂▂▁▁▂▂
wandb:       val/t2/RBF_MMD █▄▄▃▄▂▃▂▃▂▂▂▂▂▃▂▂▂▃▂▂▂▂▁▃▂▂▂▂▂▂▁▂▂▂▂▁▁▂▁
wandb: val/t3/1-Wasserstein █▆▄▄▄▄▃▄▄▃▄▃▂▃▂▃▃▄▂▂▂▂▃▄▄▃▂▃▃▃▃▃▃▂▅▂▃▃▁▂
wandb: val/t3/2-Wasserstein █▅▄▃▄▅▃▃▄▂▃▃▂▃▂▃▂▄▂▂▂▂▂▃▃▃▂▂▃▃▃▂▃▂▅▂▃▃▁▃
wandb:    val/t3/Linear_MMD ▇█▅▅▅▅▄▃▃▂▂▄▃▄▃▃▂▁▂▃▄▂▂▄▂▂▃▃▂▃▁▃▃▂▂▃▂▃▃▃
wandb:       val/t3/Mean_L1 ▇█▄▃▃▄▄▃▁▂▁▂▂▄▃▁▂▁▂▂▃▁▁▂▁▃▂▃▂▂▂▁▂▂▂▂▃▂▂▂
wandb:       val/t3/Mean_L2 ▇█▄▄▄▄▄▂▃▂▁▃▂▃▄▂▁▁▂▃▃▁▂▃▂▃▃▃▂▂▂▂▂▂▂▂▂▂▂▂
wandb:      val/t3/Mean_MSE ▇█▄▄▄▄▅▃▂▁▁▃▂▃▃▂▁▁▂▃▃▁▁▃▂▃▃▃▂▂▂▂▂▂▂▂▃▂▃▂
wandb:     val/t3/Median_L1 █▇▅▄▃▃▃▄▂▂▄▃▃▂▂▂▂▂▂▁▂▂▂▃▂▂▁▂▁▂▁▂▁▁▁▁▂▁▁▂
wandb:     val/t3/Median_L2 ██▄▄▄▅▄▃▂▃▁▃▂▅▅▂▂▂▃▃▄▁▂▃▂▄▃▄▂▃▃▂▃▃▂▃▃▃▃▂
wandb:    val/t3/Median_MSE ▇█▅▄▄▅▅▃▂▃▁▃▂▅▄▂▂▂▂▃▄▁▁▃▂▃▃▄▂▂▂▂▃▃▃▃▃▃▃▂
wandb:      val/t3/Poly_MMD ▇█▆▆▅▅▄▃▂▂▂▄▃▄▃▃▂▁▂▃▄▂▂▄▂▂▄▃▂▃▁▃▃▂▂▃▃▃▃▃
wandb:       val/t3/RBF_MMD ▇█▃▃▃▃▄▂▂▁▁▃▁▃▃▂▁▁▂▂▂▁▁▂▁▂▂▂▁▂▂▁▂▁▂▁▂▁▂▂
wandb: val/t4/1-Wasserstein █▆▄▄▃▃▃▄▂▂▃▃▃▂▂▂▂▂▂▁▂▂▂▃▂▂▂▁▁▂▁▂▁▁▁▁▂▁▁▂
wandb: val/t4/2-Wasserstein █▅▄▂▂▁▂▄▂▂▄▂▂▁▂▂▁▁▂▁▁▁▁▃▂▂▁▁▂▂▁▂▁▁▁▁▂▂▁▂
wandb:    val/t4/Linear_MMD █▆▅▄▃▂▃▅▃▃▅▃▃▂▃▃▂▂▃▂▂▂▂▅▃▂▂▂▃▃▂▃▂▂▂▂▄▃▁▃
wandb:       val/t4/Mean_L1 █▆▄▃▄▃▃▂▂▂▂▂▂▂▂▁▂▂▂▂▂▂▁▂▂▁▂▂▂▁▁▂▁▁▁▂▁▁▂▁
wandb:       val/t4/Mean_L2 █▇▆▅▄▃▄█▄▄▆▄▄▃▄▂▃▂▅▂▃▃▂▆▄▂▃▂▃▅▁▂▃▂▁▃▅▄▁▄
wandb:      val/t4/Mean_MSE █▇▆▄▄▄▃▇▃▄▆▄▃▃▃▂▂▁▄▂▂▃▂▅▃▂▃▂▃▄▁▂▃▂▂▃▄▃▁▄
wandb:     val/t4/Median_L1 █▅▅▄▄▅▃▃▁▂▂▃▂▂▄▁▂▁▃▃▄▂▃▃▂▁▃▂▁▃▁▄▂▂▁▃▃▃▃▁
wandb:     val/t4/Median_L2 █▄▄▃▃▄▂▂▁▁▂▂▁▁▃▁▂▁▂▂▃▂▂▂▁▁▂▁▁▂▁▃▂▂▁▂▃▂▂▁
wandb:    val/t4/Median_MSE █▆▄▃▃▃▃▂▂▂▂▂▂▂▂▁▂▂▂▂▂▂▁▂▂▁▂▂▂▁▁▂▁▁▁▂▁▁▂▁
wandb:      val/t4/Poly_MMD █▆▆▄▃▂▃▆▃▃▅▃▃▂▃▃▂▂▄▂▂▂▃▆▃▃▂▂▃▃▂▃▂▂▂▂▄▃▁▃
wandb:       val/t4/RBF_MMD █▇▅▃▃▃▂▇▂▃▅▃▂▂▂▂▂▁▃▂▂▂▂▅▂▁▂▁▂▃▁▁▂▂▁▂▃▃▁▃
wandb: val/t5/1-Wasserstein █▆▆▄▄▆▃▃▁▂▂▄▂▁▄▁▂▁▄▄▄▃▃▃▂▁▃▂▂▃▁▃▂▂▁▂▄▄▄▂
wandb: val/t5/2-Wasserstein ▆▆▃▃▂▇▅▄▃▂▃▃▂▁▄▁▂▂▃▄▂▂▃▇█▁▂▂▂▂▁▃▄▃▂▃▃▄▁▁
wandb:    val/t5/Linear_MMD ▇▇▃▄▃█▆▅▄▂▄▄▂▁▅▁▂▃▄▅▃▂▄▇█▁▂▃▃▂▁▄▅▃▂▃▄▅▁▂
wandb:       val/t5/Mean_L1 ▇▇▂▂▂▃▂▅▂▄▆▅▃▁▃▅▂▃▄▃▄▂▅▇▅▄▃▅▄█▄▄▃▂▂▃▃▃▂▂
wandb:       val/t5/Mean_L2 ▇▆▂▂▂▂▁▄▂▃▅▄▂▁▂▄▂▂▃▂▃▁▄▇▄▃▂▄▃█▃▃▂▁▂▂▂▂▂▂
wandb:      val/t5/Mean_MSE █▇▄▃▃▃▂▂▃▂▂▂▂▁▂▂▂▂▂▁▂▁▂▃▂▂▂▂▃▃▂▂▂▁▁▁▂▂▁▂
wandb:     val/t5/Median_L1 ▆█▄▃▄▄▃▃▅▄▄▃▂▁▁▃▃▂▅▃▃▂▂▅▅▃▂▄▄▇▃▃▃▂▂▂▃▃▂▁
wandb:     val/t5/Median_L2 ▆█▃▂▃▃▂▂▄▃▃▂▁▁▁▂▂▂▄▂▂▁▂▄▄▂▂▃▃▆▂▂▂▁▂▂▂▂▁▁
wandb:    val/t5/Median_MSE ▇▇▂▂▃▂▂▅▃▄▇▅▃▁▂▅▂▃▄▂▄▂▅█▅▄▂▅▄▇▃▅▃▂▃▃▃▃▂▂
wandb:      val/t5/Poly_MMD █▇▃▃▄█▆▆▃▂▄▄▂▁▆▁▃▂▅▅▃▃▄█▆▁▃▃▃▃▁▄▅▃▂▃▄▄▁▁
wandb:       val/t5/RBF_MMD █▆▃▂▃▂▂▂▂▂▂▂▂▁▂▂▂▂▂▁▂▁▂▃▂▂▁▂▂▃▂▂▁▁▁▁▂▁▁▂
wandb: val/t6/1-Wasserstein ▅█▃▂▃▃▂▃▄▃▄▃▂▁▂▃▂▂▄▃▃▂▂▄▅▂▂▄▄▆▃▃▃▁▂▂▃▃▂▁
wandb: val/t6/2-Wasserstein █▆▅▄▄▃▃▃▃▂▂▃▂▂▂▂▂▂▂▂▂▁▂▂▂▁▂▂▂▂▁▂▁▁▂▁▁▁▁▁
wandb:    val/t6/Linear_MMD █▆▅▄▄▃▃▃▃▂▂▃▂▂▂▂▂▂▂▂▂▁▂▂▂▁▂▂▂▂▁▂▁▁▂▁▂▁▁▁
wandb:       val/t6/Mean_L1 █▆▄▃▄▄▃▃▃▂▃▃▂▂▃▂▂▂▃▂▂▂▂▄▃▂▂▂▃▃▂▂▃▂▂▂▃▂▁▂
wandb:       val/t6/Mean_L2 █▆▃▂▃▃▂▃▂▂▂▂▁▂▂▁▂▂▂▂▂▁▁▃▃▂▂▂▂▂▁▂▂▁▂▂▂▂▁▁
wandb:      val/t6/Mean_MSE █▅▄▃▃▃▂▂▂▁▂▃▁▁▂▂▁▁▂▂▂▁▂▃▂▂▂▂▂▂▁▂▂▁▂▁▂▂▁▂
wandb:    val/t6/Median_MSE █▆▄▃▃▄▃▃▃▂▃▃▂▂▃▂▂▂▃▂▂▁▂▃▃▂▂▂▃▃▂▂▃▂▂▂▃▂▁▁
wandb:      val/t6/Poly_MMD █▄▃▂▂▂▂▂▂▁▂▂▁▁▂▁▁▁▂▁▁▁▁▂▂▁▁▁▁▂▁▁▁▁▂▁▂▁▁▁
wandb:       val/t6/RBF_MMD █▅▃▃▂▂▂▂▂▁▂▂▁▁▂▂▁▁▂▂▂▁▂▃▂▂▂▂▂▂▂▂▂▁▂▁▂▂▁▂
wandb: 
wandb: Run summary:
wandb:                epoch 1170
wandb:           train/loss 0.05572
wandb:  trainer/global_step 10538
wandb:             val/loss 0.05435
wandb: val/t1/1-Wasserstein 0.67072
wandb: val/t1/2-Wasserstein 0.69381
wandb:    val/t1/Linear_MMD 0.0014
wandb:       val/t1/Mean_L1 0.0476
wandb:       val/t1/Mean_L2 0.05613
wandb:      val/t1/Mean_MSE 0.00315
wandb:     val/t1/Median_L1 0.00164
wandb:     val/t1/Median_L2 0.87781
wandb:    val/t1/Median_MSE 0.85197
wandb:      val/t1/Poly_MMD 0.03741
wandb:       val/t1/RBF_MMD 0.03159
wandb: val/t2/1-Wasserstein 0.04051
wandb: val/t2/2-Wasserstein 0.03659
wandb:    val/t2/Linear_MMD 0.00521
wandb:       val/t2/Mean_L1 0.00552
wandb:       val/t2/Mean_L2 0.91491
wandb:      val/t2/Mean_MSE 0.8529
wandb:     val/t2/Median_L1 0.00734
wandb:     val/t2/Median_L2 0.06771
wandb:    val/t2/Median_MSE 0.07431
wandb:      val/t2/Poly_MMD 0.07215
wandb:       val/t2/RBF_MMD 0.0625
wandb: val/t3/1-Wasserstein 0.0857
wandb: val/t3/2-Wasserstein 0.07032
wandb:    val/t3/Linear_MMD 0.88386
wandb:       val/t3/Mean_L1 0.00625
wandb:       val/t3/Mean_L2 0.05861
wandb:      val/t3/Mean_MSE 0.07369
wandb:     val/t3/Median_L1 0.82285
wandb:     val/t3/Median_L2 0.06405
wandb:    val/t3/Median_MSE 0.07907
wandb:      val/t3/Poly_MMD 0.9438
wandb:       val/t3/RBF_MMD 0.00543
wandb: val/t4/1-Wasserstein 0.86497
wandb: val/t4/2-Wasserstein 0.00414
wandb:    val/t4/Linear_MMD 0.06434
wandb:       val/t4/Mean_L1 0.65317
wandb:       val/t4/Mean_L2 0.06841
wandb:      val/t4/Mean_MSE 0.08698
wandb:     val/t4/Median_L1 0.02418
wandb:     val/t4/Median_L2 0.00058
wandb:    val/t4/Median_MSE 0.7163
wandb:      val/t4/Poly_MMD 0.05258
wandb:       val/t4/RBF_MMD 0.00757
wandb: val/t5/1-Wasserstein 0.01971
wandb: val/t5/2-Wasserstein 0.00144
wandb:    val/t5/Linear_MMD 0.03794
wandb:       val/t5/Mean_L1 0.02377
wandb:       val/t5/Mean_L2 0.00057
wandb:      val/t5/Mean_MSE 0.59843
wandb:     val/t5/Median_L1 0.05173
wandb:     val/t5/Median_L2 0.00268
wandb:    val/t5/Median_MSE 0.01943
wandb:      val/t5/Poly_MMD 0.02786
wandb:       val/t5/RBF_MMD 0.54269
wandb: val/t6/1-Wasserstein 0.03952
wandb: val/t6/2-Wasserstein 0.75402
wandb:    val/t6/Linear_MMD 0.80143
wandb:       val/t6/Mean_L1 0.0671
wandb:       val/t6/Mean_L2 0.0048
wandb:      val/t6/Mean_MSE 0.04089
wandb:    val/t6/Median_MSE 0.05432
wandb:      val/t6/Poly_MMD 0.00275
wandb:       val/t6/RBF_MMD 0.04832
wandb: 
wandb: 🚀 View run glorious-surf-1 at: https://wandb.ai/allepalma/2_OFFICIAL_cfm_hein_latent_geodesic_leaveout/runs/p38ttxpq
wandb: Synced 6 W&B file(s), 0 media file(s), 1 artifact file(s) and 0 other file(s)
wandb: Find logs at: /home/icb/alessandro.palma/environment/scCFM/project_dir/experiments/2_OFFICIAL_cfm_hein_latent_geodesic_LEAVEOUT/wandb/run-20230923_153554-p38ttxpq/logs
